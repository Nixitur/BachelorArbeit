Classfile /H:/git/Bachelor/bin/example/Nodexample.class
  Last modified 14.06.2015; size 1931 bytes
  MD5 checksum 58d2e9bf7f9e9d33fb99d2d343d485d5
  Compiled from "Nodexample.java"
public class example.Nodexample
  SourceFile: "Nodexample.java"
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Class              #2             //  example/Nodexample
   #2 = Utf8               example/Nodexample
   #3 = Class              #4             //  java/lang/Object
   #4 = Utf8               java/lang/Object
   #5 = Utf8               e1
   #6 = Utf8               Lexample/Nodexample;
   #7 = Utf8               e2
   #8 = Utf8               array
   #9 = Utf8               [Lexample/Nodexample;
  #10 = Utf8               <init>
  #11 = Utf8               ()V
  #12 = Utf8               Code
  #13 = Methodref          #3.#14         //  java/lang/Object."<init>":()V
  #14 = NameAndType        #10:#11        //  "<init>":()V
  #15 = Utf8               LineNumberTable
  #16 = Utf8               LocalVariableTable
  #17 = Utf8               this
  #18 = Utf8               buildG01
  #19 = Fieldref           #1.#20         //  example/Nodexample.array:[Lexample/Nodexample;
  #20 = NameAndType        #8:#9          //  array:[Lexample/Nodexample;
  #21 = Methodref          #1.#14         //  example/Nodexample."<init>":()V
  #22 = Fieldref           #1.#23         //  example/Nodexample.e1:Lexample/Nodexample;
  #23 = NameAndType        #5:#6          //  e1:Lexample/Nodexample;
  #24 = Utf8               i
  #25 = Utf8               I
  #26 = Utf8               n1
  #27 = Utf8               n0
  #28 = Utf8               n_1
  #29 = Utf8               StackMapTable
  #30 = Utf8               buildG11
  #31 = Fieldref           #1.#32         //  example/Nodexample.e2:Lexample/Nodexample;
  #32 = NameAndType        #7:#6          //  e2:Lexample/Nodexample;
  #33 = Utf8               n4
  #34 = Utf8               n3
  #35 = Utf8               n2
  #36 = Utf8               buildG21
  #37 = Utf8               n7
  #38 = Utf8               n6
  #39 = Utf8               n5
  #40 = Utf8               main
  #41 = Utf8               ([Ljava/lang/String;)V
  #42 = Methodref          #43.#45        //  java/lang/String.length:()I
  #43 = Class              #44            //  java/lang/String
  #44 = Utf8               java/lang/String
  #45 = NameAndType        #46:#47        //  length:()I
  #46 = Utf8               length
  #47 = Utf8               ()I
  #48 = String             #49            //  012
  #49 = Utf8               012
  #50 = Methodref          #43.#51        //  java/lang/String.charAt:(I)C
  #51 = NameAndType        #52:#53        //  charAt:(I)C
  #52 = Utf8               charAt
  #53 = Utf8               (I)C
  #54 = Methodref          #1.#55         //  example/Nodexample.buildG01:()V
  #55 = NameAndType        #18:#11        //  buildG01:()V
  #56 = Methodref          #1.#57         //  example/Nodexample.buildG11:()V
  #57 = NameAndType        #30:#11        //  buildG11:()V
  #58 = Methodref          #1.#59         //  example/Nodexample.buildG21:()V
  #59 = NameAndType        #36:#11        //  buildG21:()V
  #60 = Utf8               args
  #61 = Utf8               [Ljava/lang/String;
  #62 = Utf8               order
  #63 = Utf8               Ljava/lang/String;
  #64 = Utf8               barray
  #65 = Utf8               SourceFile
  #66 = Utf8               Nodexample.java
{
  public example.Nodexample e1;
    flags: ACC_PUBLIC


  public example.Nodexample e2;
    flags: ACC_PUBLIC


  public static example.Nodexample[] array;
    flags: ACC_PUBLIC, ACC_STATIC


  public example.Nodexample();
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0       
         1: invokespecial #13                 // Method java/lang/Object."<init>":()V
         4: return        
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
               0       5     0  this   Lexample/Nodexample;

  public static void buildG01();
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=0
         0: getstatic     #19                 // Field array:[Lexample/Nodexample;
         3: ifnonnull     40
         6: bipush        8
         8: anewarray     #1                  // class example/Nodexample
        11: putstatic     #19                 // Field array:[Lexample/Nodexample;
        14: iconst_0      
        15: istore_0      
        16: goto          34
        19: getstatic     #19                 // Field array:[Lexample/Nodexample;
        22: iload_0       
        23: new           #1                  // class example/Nodexample
        26: dup           
        27: invokespecial #21                 // Method "<init>":()V
        30: aastore       
        31: iinc          0, 1
        34: iload_0       
        35: bipush        8
        37: if_icmplt     19
        40: new           #1                  // class example/Nodexample
        43: dup           
        44: invokespecial #21                 // Method "<init>":()V
        47: astore_0      
        48: new           #1                  // class example/Nodexample
        51: dup           
        52: invokespecial #21                 // Method "<init>":()V
        55: astore_1      
        56: new           #1                  // class example/Nodexample
        59: dup           
        60: invokespecial #21                 // Method "<init>":()V
        63: astore_2      
        64: aload_0       
        65: aload_1       
        66: putfield      #22                 // Field e1:Lexample/Nodexample;
        69: aload_1       
        70: aload_2       
        71: putfield      #22                 // Field e1:Lexample/Nodexample;
        74: getstatic     #19                 // Field array:[Lexample/Nodexample;
        77: iconst_0      
        78: aload_1       
        79: aastore       
        80: getstatic     #19                 // Field array:[Lexample/Nodexample;
        83: iconst_1      
        84: aload_0       
        85: aastore       
        86: return        
      LineNumberTable:
        line 8: 0
        line 9: 6
        line 10: 14
        line 11: 19
        line 10: 31
        line 15: 40
        line 16: 48
        line 17: 56
        line 18: 64
        line 19: 69
        line 21: 74
        line 22: 80
        line 23: 86
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
              16      24     0     i   I
              48      39     0    n1   Lexample/Nodexample;
              56      31     1    n0   Lexample/Nodexample;
              64      23     2   n_1   Lexample/Nodexample;
      StackMapTable: number_of_entries = 3
           frame_type = 252 /* append */
             offset_delta = 19
        locals = [ int ]
           frame_type = 14 /* same */
           frame_type = 250 /* chop */
          offset_delta = 5


  public static void buildG11();
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=0
         0: getstatic     #19                 // Field array:[Lexample/Nodexample;
         3: ifnonnull     40
         6: bipush        8
         8: anewarray     #1                  // class example/Nodexample
        11: putstatic     #19                 // Field array:[Lexample/Nodexample;
        14: iconst_0      
        15: istore_0      
        16: goto          34
        19: getstatic     #19                 // Field array:[Lexample/Nodexample;
        22: iload_0       
        23: new           #1                  // class example/Nodexample
        26: dup           
        27: invokespecial #21                 // Method "<init>":()V
        30: aastore       
        31: iinc          0, 1
        34: iload_0       
        35: bipush        8
        37: if_icmplt     19

        40: getstatic     #19                 // Field array:[Lexample/Nodexample;
        43: iconst_1      
        44: aaload        
        45: astore_0      
        46: new           #1                  // class example/Nodexample
        49: dup           
        50: invokespecial #21                 // Method "<init>":()V
        53: astore_1      
        54: new           #1                  // class example/Nodexample
        57: dup           
        58: invokespecial #21                 // Method "<init>":()V
        61: astore_2      
        62: new           #1                  // class example/Nodexample
        65: dup           
        66: invokespecial #21                 // Method "<init>":()V
        69: astore_3      
        70: aload_3       
        71: aload_0       
        72: putfield      #22                 // Field e1:Lexample/Nodexample;
        75: aload_1       
        76: aload_2       
        77: putfield      #22                 // Field e1:Lexample/Nodexample;
        80: aload_2       
        81: aload_3       
        82: putfield      #22                 // Field e1:Lexample/Nodexample;

        85: aload_0       
        86: aload_1       
        87: putfield      #31                 // Field e2:Lexample/Nodexample;
        90: aload_3       
        91: aload_1       
        92: putfield      #31                 // Field e2:Lexample/Nodexample;
        95: getstatic     #19                 // Field array:[Lexample/Nodexample;
        98: iconst_1      
        99: new           #1                  // class example/Nodexample
       102: dup           
       103: invokespecial #21                 // Method "<init>":()V
       106: aastore       
       107: getstatic     #19                 // Field array:[Lexample/Nodexample;
       110: iconst_2      
       111: new           #1                  // class example/Nodexample
       114: dup           
       115: invokespecial #21                 // Method "<init>":()V
       118: aastore       
       119: getstatic     #19                 // Field array:[Lexample/Nodexample;
       122: iconst_3      
       123: aload_2       
       124: aastore       
       125: getstatic     #19                 // Field array:[Lexample/Nodexample;
       128: iconst_4      
       129: aload_1       
       130: aastore       
       131: return        
      LineNumberTable:
        line 25: 0
        line 26: 6
        line 27: 14
        line 28: 19
        line 27: 31
        line 32: 40
        line 34: 46
        line 35: 54
        line 36: 62
        line 41: 70
        line 44: 75
        line 45: 80
        line 48: 85
        line 49: 90
        line 52: 95
        line 53: 107
        line 56: 119
        line 57: 125
        line 58: 131
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
              16      24     0     i   I
              46      86     0    n1   Lexample/Nodexample;
              54      78     1    n4   Lexample/Nodexample;
              62      70     2    n3   Lexample/Nodexample;
              70      62     3    n2   Lexample/Nodexample;
      StackMapTable: number_of_entries = 3
           frame_type = 252 /* append */
             offset_delta = 19
        locals = [ int ]
           frame_type = 14 /* same */
           frame_type = 250 /* chop */
          offset_delta = 5


  public static void buildG21();
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=6, args_size=0
         0: getstatic     #19                 // Field array:[Lexample/Nodexample;
         3: ifnonnull     40
         6: bipush        8
         8: anewarray     #1                  // class example/Nodexample
        11: putstatic     #19                 // Field array:[Lexample/Nodexample;
        14: iconst_0      
        15: istore_0      
        16: goto          34
        19: getstatic     #19                 // Field array:[Lexample/Nodexample;
        22: iload_0       
        23: new           #1                  // class example/Nodexample
        26: dup           
        27: invokespecial #21                 // Method "<init>":()V
        30: aastore       
        31: iinc          0, 1
        34: iload_0       
        35: bipush        8
        37: if_icmplt     19
        40: getstatic     #19                 // Field array:[Lexample/Nodexample;
        43: iconst_4      
        44: aaload        
        45: astore_0      
        46: new           #1                  // class example/Nodexample
        49: dup           
        50: invokespecial #21                 // Method "<init>":()V
        53: astore_1      
        54: new           #1                  // class example/Nodexample
        57: dup           
        58: invokespecial #21                 // Method "<init>":()V
        61: astore_2      
        62: new           #1                  // class example/Nodexample
        65: dup           
        66: invokespecial #21                 // Method "<init>":()V
        69: astore_3      
        70: getstatic     #19                 // Field array:[Lexample/Nodexample;
        73: iconst_0      
        74: aaload        
        75: astore        4
        77: getstatic     #19                 // Field array:[Lexample/Nodexample;
        80: iconst_3      
        81: aaload        
        82: astore        5
        84: aload_3       
        85: aload_0       
        86: putfield      #22                 // Field e1:Lexample/Nodexample;
        89: aload_1       
        90: aload_2       
        91: putfield      #22                 // Field e1:Lexample/Nodexample;
        94: aload_2       
        95: aload_3       
        96: putfield      #22                 // Field e1:Lexample/Nodexample;
        99: aload         4
       101: aload_2       
       102: putfield      #31                 // Field e2:Lexample/Nodexample;
       105: aload         5
       107: aload_1       
       108: putfield      #31                 // Field e2:Lexample/Nodexample;
       111: aload_0       
       112: aload_2       
       113: putfield      #31                 // Field e2:Lexample/Nodexample;
       116: aload_3       
       117: aload_1       
       118: putfield      #31                 // Field e2:Lexample/Nodexample;
       121: aload_2       
       122: aload_1       
       123: putfield      #31                 // Field e2:Lexample/Nodexample;

       170: getstatic     #19                 // Field array:[Lexample/Nodexample;
       173: iconst_0      
       174: new           #1                  // class example/Nodexample
       177: dup           
       178: invokespecial #21                 // Method "<init>":()V
       181: aastore  

       182: getstatic     #19                 // Field array:[Lexample/Nodexample;
       185: iconst_3      
       186: new           #1                  // class example/Nodexample
       189: dup           
       190: invokespecial #21                 // Method "<init>":()V
       193: aastore     

       158: getstatic     #19                 // Field array:[Lexample/Nodexample;
       161: iconst_4      
       162: new           #1                  // class example/Nodexample
       165: dup           
       166: invokespecial #21                 // Method "<init>":()V
       169: aastore       

       146: getstatic     #19                 // Field array:[Lexample/Nodexample;
       149: iconst_5      
       150: new           #1                  // class example/Nodexample
       153: dup           
       154: invokespecial #21                 // Method "<init>":()V
       157: aastore       

       126: getstatic     #19                 // Field array:[Lexample/Nodexample;
       129: bipush        7
       131: aload_1       
       132: aastore       

       133: getstatic     #19                 // Field array:[Lexample/Nodexample;
       136: bipush        6
       138: new           #1                  // class example/Nodexample
       141: dup           
       142: invokespecial #21                 // Method "<init>":()V
       145: aastore       



       194: return        
      LineNumberTable:
        line 60: 0
        line 61: 6
        line 62: 14
        line 63: 19
        line 62: 31
        line 67: 40
        line 69: 46
        line 70: 54
        line 71: 62
        line 74: 70
        line 75: 77
        line 78: 84
        line 81: 89
        line 82: 94
        line 85: 99
        line 86: 105
        line 87: 111
        line 88: 116
        line 89: 121
        line 92: 126
        line 94: 133
        line 95: 146
        line 96: 158
        line 97: 170
        line 98: 182
        line 99: 194
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
              16      24     0     i   I
              46     149     0    n4   Lexample/Nodexample;
              54     141     1    n7   Lexample/Nodexample;
              62     133     2    n6   Lexample/Nodexample;
              70     125     3    n5   Lexample/Nodexample;
              77     118     4    n0   Lexample/Nodexample;
              84     111     5    n3   Lexample/Nodexample;
      StackMapTable: number_of_entries = 3
           frame_type = 252 /* append */
             offset_delta = 19
        locals = [ int ]
           frame_type = 14 /* same */
           frame_type = 250 /* chop */
          offset_delta = 5


  public static void main(java.lang.String[]);
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=3, args_size=1
         0: aload_0       
         1: arraylength   
         2: iconst_1      
         3: if_icmplt     16
         6: aload_0       
         7: iconst_0      
         8: aaload        
         9: invokevirtual #42                 // Method java/lang/String.length:()I
        12: iconst_3      
        13: if_icmpge     22
        16: ldc           #48                 // String 012
        18: astore_1      
        19: goto          26
        22: aload_0       
        23: iconst_0      
        24: aaload        
        25: astore_1      
        26: iconst_0      
        27: istore_2      
        28: goto          82
        31: aload_1       
        32: iload_2       
        33: invokevirtual #50                 // Method java/lang/String.charAt:(I)C
        36: tableswitch   { // 48 to 50
                      48: 64
                      49: 70
                      50: 76
                 default: 79
            }
        64: invokestatic  #54                 // Method buildG01:()V
        67: goto          79
        70: invokestatic  #56                 // Method buildG11:()V
        73: goto          79
        76: invokestatic  #58                 // Method buildG21:()V
        79: iinc          2, 1
        82: iload_2       
        83: iconst_3      
        84: if_icmplt     31
        87: getstatic     #19                 // Field array:[Lexample/Nodexample;
        90: astore_2      
        91: return        
      LineNumberTable:
        line 103: 0
        line 104: 16
        line 105: 19
        line 106: 22
        line 108: 26
        line 109: 31
        line 110: 64
        line 111: 67
        line 112: 70
        line 113: 73
        line 114: 76
        line 108: 79
        line 118: 87
        line 119: 91
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
               0      92     0  args   [Ljava/lang/String;
              19       3     1 order   Ljava/lang/String;
              26      66     1 order   Ljava/lang/String;
              28      59     2     i   I
              91       1     2 barray   [Lexample/Nodexample;
      StackMapTable: number_of_entries = 9
           frame_type = 16 /* same */
           frame_type = 5 /* same */
           frame_type = 252 /* append */
             offset_delta = 3
        locals = [ class java/lang/String ]
           frame_type = 252 /* append */
             offset_delta = 4
        locals = [ int ]
           frame_type = 32 /* same */
           frame_type = 5 /* same */
           frame_type = 5 /* same */
           frame_type = 2 /* same */
           frame_type = 2 /* same */

}
